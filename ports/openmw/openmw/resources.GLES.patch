diff --color=auto -bur resources2/shaders/compatibility/bs/default.frag resources/shaders/compatibility/bs/default.frag
--- resources2/shaders/compatibility/bs/default.frag	2025-07-16 12:27:18
+++ resources/shaders/compatibility/bs/default.frag	2025-07-09 00:00:19
@@ -40,7 +40,7 @@
 uniform bool useTreeAnim;
 uniform float distortionStrength;
 
-#include "lib/core/fragment.h.glsl"
+#include "lib/core/fragment.glsl"
 #include "lib/light/lighting.glsl"
 #include "lib/material/alpha.glsl"
 #include "lib/util/distortion.glsl"
diff --color=auto -bur resources2/shaders/compatibility/bs/default.vert resources/shaders/compatibility/bs/default.vert
--- resources2/shaders/compatibility/bs/default.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/bs/default.vert	2025-07-08 23:59:15
@@ -10,7 +10,7 @@
 
 #define PER_PIXEL_LIGHTING 1
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 #if @diffuseMap
 varying vec2 diffuseMapUV;
diff --color=auto -bur resources2/shaders/compatibility/bs/nolighting.frag resources/shaders/compatibility/bs/nolighting.frag
--- resources2/shaders/compatibility/bs/nolighting.frag	2025-07-16 12:27:18
+++ resources/shaders/compatibility/bs/nolighting.frag	2025-07-09 00:00:23
@@ -26,7 +26,7 @@
 uniform float near;
 uniform float alphaRef;
 
-#include "lib/core/fragment.h.glsl"
+#include "lib/core/fragment.glsl"
 #include "lib/material/alpha.glsl"
 
 #include "compatibility/vertexcolors.glsl"
diff --color=auto -bur resources2/shaders/compatibility/bs/nolighting.vert resources/shaders/compatibility/bs/nolighting.vert
--- resources2/shaders/compatibility/bs/nolighting.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/bs/nolighting.vert	2025-07-08 23:59:09
@@ -8,7 +8,7 @@
     #extension GL_EXT_gpu_shader4: require
 #endif
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 #if @diffuseMap
 varying vec2 diffuseMapUV;
diff --color=auto -bur resources2/shaders/compatibility/debug.frag resources/shaders/compatibility/debug.frag
--- resources2/shaders/compatibility/debug.frag	2025-07-16 12:27:18
+++ resources/shaders/compatibility/debug.frag	2025-07-08 18:26:40
@@ -4,7 +4,7 @@
 
 varying vec3 vertexNormal;
 
-uniform bool useAdvancedShader = false;
+uniform bool useAdvancedShader;
 
 void main()
 {
diff --color=auto -bur resources2/shaders/compatibility/debug.vert resources/shaders/compatibility/debug.vert
--- resources2/shaders/compatibility/debug.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/debug.vert	2025-07-08 18:26:44
@@ -1,12 +1,12 @@
 #version 120
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 uniform vec3 color;
 uniform vec3 trans;
 uniform vec3 scale;
 uniform bool useNormalAsColor;
-uniform bool useAdvancedShader = false;
+uniform bool useAdvancedShader;
 
 centroid varying vec4 passColor;
 varying vec3 vertexNormal;
diff --color=auto -bur resources2/shaders/compatibility/depthclipped.vert resources/shaders/compatibility/depthclipped.vert
--- resources2/shaders/compatibility/depthclipped.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/depthclipped.vert	2025-07-08 18:25:11
@@ -3,7 +3,7 @@
 varying vec2 diffuseMapUV;
 varying float alphaPassthrough;
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 #include "vertexcolors.glsl"
 
 void main()
diff --color=auto -bur resources2/shaders/compatibility/fog.glsl resources/shaders/compatibility/fog.glsl
--- resources2/shaders/compatibility/fog.glsl	2025-07-16 12:27:19
+++ resources/shaders/compatibility/fog.glsl	2025-07-09 00:00:08
@@ -1,5 +1,5 @@
 #if @skyBlending
-#include "lib/core/fragment.h.glsl"
+#include "lib/core/fragment.glsl"
 
 uniform float skyBlendingStart;
 #endif
diff --color=auto -bur resources2/shaders/compatibility/fullscreen_tri.frag resources/shaders/compatibility/fullscreen_tri.frag
--- resources2/shaders/compatibility/fullscreen_tri.frag	2025-07-16 12:27:18
+++ resources/shaders/compatibility/fullscreen_tri.frag	2025-07-08 18:45:26
@@ -2,7 +2,7 @@
 
 varying vec2 uv;
 
-#include "lib/core/fragment.h.glsl"
+#include "lib/core/fragment.glsl"
 
 void main()
 {
diff --color=auto -bur resources2/shaders/compatibility/fullscreen_tri.vert resources/shaders/compatibility/fullscreen_tri.vert
--- resources2/shaders/compatibility/fullscreen_tri.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/fullscreen_tri.vert	2025-07-08 18:45:09
@@ -1,10 +1,10 @@
 #version 120
 
-uniform vec2 scaling = vec2(1.0, 1.0);
+uniform vec2 scaling;
 
 varying vec2 uv;
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 void main()
 {
diff --color=auto -bur resources2/shaders/compatibility/groundcover.vert resources/shaders/compatibility/groundcover.vert
--- resources2/shaders/compatibility/groundcover.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/groundcover.vert	2025-07-08 23:58:16
@@ -8,7 +8,7 @@
     #extension GL_EXT_gpu_shader4: require
 #endif
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 #define GROUNDCOVER
 
diff --color=auto -bur resources2/shaders/compatibility/objects.frag resources/shaders/compatibility/objects.frag
--- resources2/shaders/compatibility/objects.frag	2025-07-16 12:27:18
+++ resources/shaders/compatibility/objects.frag	2025-07-09 00:00:14
@@ -89,7 +89,7 @@
 #define ADDITIVE_BLENDING
 #endif
 
-#include "lib/core/fragment.h.glsl"
+#include "lib/core/fragment.glsl"
 #include "lib/light/lighting.glsl"
 #include "lib/material/parallax.glsl"
 #include "lib/material/alpha.glsl"
diff --color=auto -bur resources2/shaders/compatibility/objects.vert resources/shaders/compatibility/objects.vert
--- resources2/shaders/compatibility/objects.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/objects.vert	2025-07-08 18:24:39
@@ -8,7 +8,7 @@
     #extension GL_EXT_gpu_shader4: require
 #endif
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 #if @diffuseMap
 varying vec2 diffuseMapUV;
 #endif
diff --color=auto -bur resources2/shaders/compatibility/shadowcasting.vert resources/shaders/compatibility/shadowcasting.vert
--- resources2/shaders/compatibility/shadowcasting.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/shadowcasting.vert	2025-07-08 23:47:15
@@ -6,8 +6,8 @@
 
 uniform int colorMode;
 uniform bool useTreeAnim;
-uniform bool useDiffuseMapForShadowAlpha = true;
-uniform bool alphaTestShadows = true;
+uniform bool useDiffuseMapForShadowAlpha;
+uniform bool alphaTestShadows;
 
 void main(void)
 {
diff --color=auto -bur resources2/shaders/compatibility/sky.vert resources/shaders/compatibility/sky.vert
--- resources2/shaders/compatibility/sky.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/sky.vert	2025-07-08 23:59:22
@@ -1,6 +1,6 @@
 #version 120
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 #include "lib/sky/passes.glsl"
 
diff --color=auto -bur resources2/shaders/compatibility/terrain.vert resources/shaders/compatibility/terrain.vert
--- resources2/shaders/compatibility/terrain.vert	2025-07-16 12:27:19
+++ resources/shaders/compatibility/terrain.vert	2025-07-08 23:59:20
@@ -8,7 +8,7 @@
     #extension GL_EXT_gpu_shader4: require
 #endif
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 varying vec2 uv;
 varying float euclideanDepth;
 varying float linearDepth;
diff --color=auto -bur resources2/shaders/compatibility/water.vert resources/shaders/compatibility/water.vert
--- resources2/shaders/compatibility/water.vert	2025-07-16 12:27:18
+++ resources/shaders/compatibility/water.vert	2025-07-08 23:59:17
@@ -1,6 +1,6 @@
 #version 120
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 varying vec4  position;
 varying float linearDepth;
diff --color=auto -bur resources2/shaders/lib/core/fragment.glsl resources/shaders/lib/core/fragment.glsl
--- resources2/shaders/lib/core/fragment.glsl	2025-07-16 12:27:19
+++ resources/shaders/lib/core/fragment.glsl	2025-07-09 17:39:20
@@ -1,5 +1,3 @@
-#version 120
-
 #include "lib/core/fragment.h.glsl"
 
 uniform sampler2D reflectionMap;
diff --color=auto -bur resources2/shaders/lib/core/fragment.h.glsl resources/shaders/lib/core/fragment.h.glsl
--- resources2/shaders/lib/core/fragment.h.glsl	2025-07-16 12:27:19
+++ resources/shaders/lib/core/fragment.h.glsl	2025-07-08 18:23:49
@@ -1,9 +1,6 @@
 #ifndef OPENMW_FRAGMENT_H_GLSL
 #define OPENMW_FRAGMENT_H_GLSL
 
-@link "lib/core/fragment.glsl" if !@useOVR_multiview
-@link "lib/core/fragment_multiview.glsl" if @useOVR_multiview
-
 vec4 sampleReflectionMap(vec2 uv);
 
 #if @waterRefraction
diff --color=auto -bur resources2/shaders/lib/core/fragment_multiview.glsl resources/shaders/lib/core/fragment_multiview.glsl
--- resources2/shaders/lib/core/fragment_multiview.glsl	2025-07-16 12:27:19
+++ resources/shaders/lib/core/fragment_multiview.glsl	2025-07-09 00:00:34
@@ -4,7 +4,7 @@
 #extension GL_OVR_multiview2 : require
 #extension GL_EXT_texture_array : require
 
-#include "lib/core/fragment.h.glsl"
+#include "lib/core/fragment.glsl"
 
 uniform sampler2DArray reflectionMap;
 
diff --color=auto -bur resources2/shaders/lib/core/vertex.glsl resources/shaders/lib/core/vertex.glsl
--- resources2/shaders/lib/core/vertex.glsl	2025-07-16 12:27:19
+++ resources/shaders/lib/core/vertex.glsl	2025-07-09 17:39:24
@@ -1,5 +1,3 @@
-#version 120
-
 #include "lib/core/vertex.h.glsl"
 
 uniform mat4 projectionMatrix;
diff --color=auto -bur resources2/shaders/lib/core/vertex.h.glsl resources/shaders/lib/core/vertex.h.glsl
--- resources2/shaders/lib/core/vertex.h.glsl	2025-07-16 12:27:19
+++ resources/shaders/lib/core/vertex.h.glsl	2025-07-08 18:54:59
@@ -1,6 +1,3 @@
-@link "lib/core/vertex.glsl" if !@useOVR_multiview
-@link "lib/core/vertex_multiview.glsl" if @useOVR_multiview
-
 vec4 modelToClip(vec4 pos);
 vec4 modelToView(vec4 pos);
 vec4 viewToClip(vec4 pos);
diff --color=auto -bur resources2/shaders/lib/core/vertex_multiview.glsl resources/shaders/lib/core/vertex_multiview.glsl
--- resources2/shaders/lib/core/vertex_multiview.glsl	2025-07-16 12:27:19
+++ resources/shaders/lib/core/vertex_multiview.glsl	2025-07-08 23:58:57
@@ -6,7 +6,7 @@
 
 layout(num_views = @numViews) in;
 
-#include "lib/core/vertex.h.glsl"
+#include "lib/core/vertex.glsl"
 
 uniform mat4 projectionMatrixMultiView[@numViews];
 